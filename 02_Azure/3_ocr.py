# -*- coding: utf-8 -*-
"""3_OCR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mz1fBTmt8qfcw6eGKHiId7VemZnbhWgz

# OCR
"""

import requests
from io import BytesIO
from PIL import Image

subscription_key = 'subscription_key'

vision_base_url = 'https://daegu0001.cognitiveservices.azure.com/vision/v2.0/'

ocr_url = vision_base_url + 'ocr'

image_url = 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/af/Atomist_quote_from_Democritus.png/338px-Atomist_quote_from_Democritus.png'

"""![sample](https://upload.wikimedia.org/wikipedia/commons/thumb/a/af/Atomist_quote_from_Democritus.png/338px-Atomist_quote_from_Democritus.png)"""

image = Image.open(BytesIO(requests.get(image_url).content))

headers = {'Ocp-Apim-Subscription-Key': subscription_key}
params = {
    'language': 'unk', # unknown, auto-detect
    'detectOrientation': 'true' # 방향 자동 인식
}
data = {'url': image_url}

"""지원하는 언어목록

- unk (AutoDetect)
- zh-Hans (ChineseSimplified)
- zh-Hant (ChineseTraditional)
- cs (Czech)
- da (Danish)
- nl (Dutch)
- en (English)
- fi (Finnish)
- fr (French)
- de (German)
- el (Greek)
- hu (Hungarian)
- it (Italian)
- ja (Japanese)
- ko (Korean)
- nb (Norwegian)
- pl (Polish)
- pt (Portuguese,
- ru (Russian)
- es (Spanish)
- sv (Swedish)
- tr (Turkish)
- ar (Arabic)
- ro (Romanian)
- sr-Cyrl (SerbianCyrillic)
- sr-Latn (SerbianLatin)
- sk (Slovak)
"""

response = requests.post(ocr_url, headers=headers, params=params, json=data)

analysis = response.json()

analysis

line_infos = [region['lines'] for region in analysis['regions']]
word_infos = []

for line in line_infos:
    for word_metadata in line:
        for word_info in word_metadata['words']:
            word_infos.append(word_info)
            
word_infos

import matplotlib.pyplot as plt # 별명 짓기 (as)

plt.figure(figsize=(5,5))
image = Image.open(BytesIO(requests.get(image_url).content))

ax = plt.imshow(image, alpha=0.5)

for word in word_infos:
    bbox = [int(num) for num in word["boundingBox"].split(",")]
    text = word["text"]
    origin = (bbox[0], bbox[1])
    patch = plt.Rectangle(origin, bbox[2], bbox[3], fill=False, linewidth=2, color='y')
    ax.axes.add_patch(patch)
    plt.text(origin[0], origin[1], text, fontsize=20, weight="bold", va="top")
    
plt.axis("off")

korean_url = 'https://www.unikorea.go.kr/unikorea/common/images/content/peace.png'

korean_image = Image.open(BytesIO(requests.get(korean_url).content))
korean_image

headers = {'Ocp-Apim-Subscription-Key': subscription_key}
params = {
    'language': 'ko',
    'detectOrientation': 'true' # 방향 자동 인식
}
data = {'url': korean_url}

response = requests.post(ocr_url, headers=headers, params=params, json=data)

analysis = response.json()

analysis

line_infos = [region['lines'] for region in analysis['regions']]
word_infos = []

for line in line_infos:
    for word_metadata in line:
        for word_info in word_metadata['words']:
            word_infos.append(word_info)
            
word_infos

