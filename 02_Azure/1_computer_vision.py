# -*- coding: utf-8 -*-
"""1_Computer Vision.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TqeP_iDOHprIJD9ajm8Nx5FbLCo01WXY
"""

# function --> class --> module --> package

import requests

response = requests.get('https://naver.com')

html = response.text

print(html)

# https://daegu0001.cognitiveservices.azure.com/

import matplotlib.pyplot as plt

from PIL import Image

from io import BytesIO

import json

subscription_key = 'subscription_key'

vision_base_url = 'https://daegu0001.cognitiveservices.azure.com/vision/v2.0/'

analyze_url = vision_base_url + 'analyze'

image_url = "https://upload.wikimedia.org/wikipedia/commons/thumb/1/12/" + \
"Broadway_and_Times_Square_by_night.jpg/450px-Broadway_and_Times_Square_by_night.jpg"

image = Image.open(BytesIO(requests.get(image_url).content))

image

"""## 헤더 정보를 세팅합니다."""

headers = { 'Ocp-Apim-Subscription-Key': subscription_key }
params = { 'visualFeatures': 'Categories,Description,Color' }
data = { 'url': image_url }

response = requests.post(analyze_url, headers=headers, params=params, json=data)

response

analysis = response.json()

analysis

image_caption = analysis['description']['captions'][0]['text']

image_caption

"""# Object Detection"""

objectDetection_url = vision_base_url + 'detect'

image_url='https://static01.nyt.com/images/2019/10/03/nyregion/03nytoday1/merlin_162008868_5a82355f-1be5-4ddb-b562-a6cd7b776a43-superJumbo.jpg?quality=90&auto=webp'

image = Image.open(BytesIO(requests.get(image_url).content))

headers = {'Ocp-Apim-Subscription-Key': subscription_key}
data = {'url': image_url}

response = requests.post(objectDetection_url, headers=headers, json=data)

detectionResult = response.json()

detectionResult

from PIL import Image, ImageDraw, ImageFont

draw = ImageDraw.Draw(image)

def CreateImage(detectionResult):
    objects = detectionResult['objects']
    
    for obj in objects:
        rect = obj['rectangle']
        
        x = rect['x']
        y = rect['y']
        w = rect['w']
        h = rect['h']
        
        draw.rectangle(((x,y), (x+w,y+h)), outline='red', width=3)
    return draw

result = CreateImage(detectionResult)

image

